{"version":3,"sources":["firebase.js","App.js","mapStyles.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","libraries","mapContainerStyle","width","height","center","lat","lng","options","styles","disableDefaultUI","zoomControl","checkedArrPart1","checkedArr","App","useLoadScript","googleMapsApiKey","isLoaded","loadError","useState","riders","setRealMarkers","useEffect","collection","onSnapshot","snapshot","docs","map","doc","data","React","mapRef","useRef","useCallback","current","selectedIcon","setSelectedIcon","i","length","mybool","j","name","long","bike","push","className","id","zoom","rider","key","position","onClick","onCloseClick","Search","panTo","type","placeholder","value","sendEmail","findPeople","BottomSearch","requestmeet","numberv","usePlacesAutocomplete","requestOptions","ready","suggestions","status","setValue","clearSuggestions","onSelect","address","a","getGeocode","results","getLatLng","selectedLocation","document","getElementById","innerHTML","geometry","location","countryname","cityname","address_components","long_name","console","log","onChange","e","target","disabled","description","addy","datetime","hoster","alert","service_id","template_id","user_id","template_params","$","ajax","JSON","stringify","contentType","done","fail","error","inputVal","bikeVal","latVal","LongVal","countryName","cityName","add","parseFloat","country","city","addy2","toRadians","n","Math","PI","getDist","lat1","lat2","lon1","lon2","dlon","dlat","pow","sin","cos","asin","sqrt","radius","resultLabel","found","innerText","Boolean","window","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.689fc355.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBgCQivLOVmUuKhnjNVU8bMMxbG_85FoIA\",\r\n    authDomain: \"meetup-v2.firebaseapp.com\",\r\n    databaseURL: \"https://meetup-v2.firebaseio.com\",\r\n    projectId: \"meetup-v2\",\r\n    storageBucket: \"meetup-v2.appspot.com\",\r\n    messagingSenderId: \"204269353570\",\r\n    appId: \"1:204269353570:web:e80e739691776f8b0daf3b\",\r\n    measurementId: \"G-S4NKHKVSSM\"\r\n  };\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default db;","import React, { useState, useEffect, forwardRef } from \"react\";\nimport './App.css';\n\nimport{\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow\n} from \"@react-google-maps/api\";\n\nimport usePlacesAutocomplete, {\n  getGeocode,\n  getLatLng,\n} from \"use-places-autocomplete\";\n\nimport{\n  Combobox,\n  ComboboxInput,\n  ComboboxPopover,\n  ComboboxList,\n  ComboboxOption,\n} from \"@reach/combobox\";\n\nimport \"@reach/combobox/styles.css\";\n\nimport mapStyles from \"./mapStyles\";\nimport $ from 'jquery';\n\nimport db from \"./firebase\";\n\n\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"80vw\",\n  height: \"80vh\",\n};\nconst center = {\n  lat: 37.6872,\n  lng: 97.3301,\n};\n\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true\n}\n\n\nlet markersArr = [];\nlet windowsArr = [];\n\nlet checkedArrPart1 = [];\nlet checkedArr = [];\n\nexport default function App() {\n  const {isLoaded, loadError} = useLoadScript({\n    googleMapsApiKey: \"AIzaSyAkQaHkO5f2LymmHzYD0bAcAxj6h9a2kMU\",\n    libraries,\n\n  });\n\n  const [riders, setRealMarkers] = useState([]);\n\n  useEffect(() => {\n    db.collection(\"riders\").onSnapshot((snapshot) =>\n      setRealMarkers(snapshot.docs.map((doc) => doc.data()))\n    );\n  }, []);\n\n  const [markers, setMarkers] = React.useState([]);\n  //const [selected, setSelected] = React.useState(null);\n\n  // const onMapClick = React.useCallback((event)=>{\n  //   setMarkers(current => [...current, {\n  //    // lat: event.latLng.lat(),\n  //     //lng: event.latLng.lng(),\n  //     time: new Date()\n  //   }]);\n  // },[]);\n\n\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback((map)=>{\n    mapRef.current = map;\n  },[])\n\n  const panTo = React.useCallback(({ lat, lng }) => {\n    //mapRef.current.panTo({ lat, lng });\n    //mapRef.current.setZoom(8);\n  }, [])\n\n  const [selectedIcon, setSelectedIcon] = useState(null);\n\n  if(loadError) return \"Error loading maps\";\n  if(!isLoaded) return \"Loading maps...\";\n\n  checkedArrPart1 = [...riders];\n  checkedArr = [];\n\n  for(let i =0; i < checkedArrPart1.length; i++){\n    if(checkedArr.length > 0){\n      let mybool = false;\n      for(let j = 0; j < checkedArr.length; j++){\n        if(checkedArrPart1[i].name === checkedArr[j].name){\n          mybool = true;\n        }else if(checkedArrPart1[i].lat === checkedArr[j].lat && checkedArrPart1[i].long === checkedArr[j].long){\n          mybool = true;\n          checkedArr[j].name = checkedArr[j].name + \", \" + checkedArrPart1[i].name  + \" (\"+ checkedArrPart1[i].bike + \")\";\n          break;\n        }\n      }\n      if(!mybool){\n        checkedArr.push({name: checkedArrPart1[i].name  + \" (\"+ checkedArrPart1[i].bike + \")\", lat: checkedArrPart1[i].lat, long: checkedArrPart1[i].long});\n      }\n    }else{\n      checkedArr.push({name: checkedArrPart1[i].name + \" (\"+ checkedArrPart1[i].bike + \")\", lat: checkedArrPart1[i].lat, long: checkedArrPart1[i].long});\n    }\n  }\n\n  return (\n    <div className=\"app\">\n      <header>\n        <nav>\n          <ul>\n            <h3 id = \"headh\">Motorcycle Meetups Member List</h3>\n          </ul>\n        </nav>\n      </header>\n\n      <div className =\"theMap\">\n\n\n        \n\n        <GoogleMap className=\"thegooglemap\"\n          mapContainerStyle={mapContainerStyle}\n          zoom={2}\n          center={center}\n          options={options}\n        >\n\n        {checkedArr.map(rider=>(\n\n          <Marker \n            key={rider.name}\n            position={{lat: rider.lat, lng: rider.long}}\n            onClick={()=>{\n              setSelectedIcon(rider);\n            }}\n            \n          />\n          \n        ))}\n\n        {selectedIcon && (\n          <InfoWindow\n            position={{lat:selectedIcon.lat, lng:selectedIcon.long}}\n            onCloseClick={()=>{\n              setSelectedIcon(null);\n            }}\n          >\n            <h3 className=\"markerh3\">{selectedIcon.name}</h3>\n          </InfoWindow>\n\n        )}\n\n        </GoogleMap>\n      </div>\n\n      <Search panTo={panTo, \"1\"}/>\n      \n      <div className=\"latlong-view\">\n        <p><b>Latitude:</b> <span id=\"latitude_view\"></span></p>\n        <p><b>Longitude:</b> <span id=\"longitude_view\"></span></p>\n        \n      </div>\n\n      <div className=\"country-view\">\n        <p><b>City:</b> <span id=\"whatCity\"></span></p>\n        <p><b>Country:</b> <span id=\"whatCountry\"></span></p>\n      </div>\n\n      <div id = \"submitPart\">\n        <input type=\"text\" className=\"DiscordName\" id = \"DiscordName\" placeholder=\"Type Discord name with ID (Name#ID)\" />\n        <input type=\"text\" className=\"biketype\" id = \"biketype\" placeholder=\"Enter your bike (2017 GSX1300R HAYABUSA)\" />\n        <input type=\"button\" className=\"AddToList\" value=\"Click to Add To List\" onClick={(sendEmail)} />\n        <h1 className = \"MayTake\">Can take up to a day to process request</h1>\n      </div>\n      \n\n\n      <div id = \"FindPeople\">\n      <p><b>--FIND MEMBERS NEAR ME--</b> <span id=\"myLabel1\"></span></p>\n      <input type=\"text\" className=\"Radius\" id = \"Radius\" placeholder=\"Enter radius in miles\" />\n      <input type=\"button\" className=\"FindPpl\" value=\"Click to Find People\" onClick={(findPeople)}/>\n      <p><b id = \"resultLabel\">Members will appear here:</b> <span id=\"myLabel2\"></span></p>\n      <p><b id = \"results\">No members to display</b> <span id=\"myLabel2\"></span></p>\n    </div>\n\n    <div id = \"advert\">\n      <h3>---Upcoming Member Rides---</h3>\n\n      <h2>Location: 120 Triangle Shopping Center Downtown Longview Cowlitz County Washington United States 98632 4682</h2>\n      <h2>Date: 9:30am, August 22</h2>\n      <h2 id = \"bottomh2\">Host: tallis#0518</h2>\n\n      <h2>Request to Host a Meet</h2>\n\n      <BottomSearch panTo={panTo, \"2\"}/>\n\n      <div className=\"latlong-view2\">\n        <p><b>Location:</b> <span id=\"addy_view2\"></span></p>\n      </div>\n      <input type=\"text\" className=\"Radius\" id = \"HostName\" placeholder=\"Enter hosts Discord name with ID (Name#ID)\" />\n      <input type=\"text\" className=\"date\" id = \"DateBox\" placeholder=\"Enter the date and time (12:00pm MM/DD/YY)\" />\n      <input type=\"button\" className=\"FindPpl\" value=\"Click to request meetup ad\" onClick={(requestmeet)}/>\n\n\n    </div>\n\n    <div id = \"everyone\">\n      <h1>Member Meetup Resource Created and Operated by Nik</h1>\n    </div>\n    \n      \n    </div>\n  );\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction Search({panTo, numberv}){\n  const { \n      ready, \n      value, \n      suggestions: {status, data}, \n      setValue, \n      clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions:{\n      \n    },\n  });\n\n  var cnameforit = \"search\";\n\n  return (\n    <div className=\"search1\">\n      <Combobox \n        onSelect={async (address) => {\n          setValue(address, false);\n          clearSuggestions();\n          try{\n            const results = await getGeocode({address});\n            const { lat, lng } = await getLatLng(results[0]);\n            var selectedLocation = results[0];\n              document.getElementById('latitude_view').innerHTML = selectedLocation.geometry.location.lat();\n              document.getElementById('longitude_view').innerHTML = selectedLocation.geometry.location.lng();\n\n              let countryname = \"\";\n              let cityname = \"\";\n\n              if(selectedLocation.address_components.length === 4){\n                countryname = selectedLocation.address_components[4-1].long_name;\n                cityname = selectedLocation.address_components[4-4].long_name;\n              }else if(selectedLocation.address_components.length === 5){\n                countryname = selectedLocation.address_components[5-1].long_name;\n                cityname = selectedLocation.address_components[5-4].long_name;\n              }else if(selectedLocation.address_components.length === 3){\n                countryname = selectedLocation.address_components[3-1].long_name;\n                cityname = selectedLocation.address_components[3-3].long_name;\n              }else if(selectedLocation.address_components.length === 2){\n                countryname = selectedLocation.address_components[2-1].long_name;\n                cityname = selectedLocation.address_components[2-2].long_name;\n              }else{\n                countryname = 'N/A';\n              }\n\n              document.getElementById('whatCountry').innerHTML = countryname;\n              document.getElementById('whatCity').innerHTML = cityname;\n\n          }catch(error){\n            console.log(\"ERROR!\");\n            console.log(error);\n          }\n          \n        }}\n        >\n          <ComboboxInput value = {value} \n            onChange={(e) => {\n              setValue(e.target.value);\n            }} \n            disabled = {!ready}\n            placeholder=\"Enter a location\"\n          />\n          <ComboboxPopover className=\"optionscontainer\">\n            <ComboboxList>\n              {status === \"OK\" && data.map(({id, description}) => (\n                <ComboboxOption key={id} value={description} className=\"optionsbro\"/>\n              ))}\n            </ComboboxList>\n          </ComboboxPopover>\n      </Combobox>\n    </div>\n  )\n}\nfunction requestmeet(){\n\n  var addy = document.getElementById('addy_view2').innerHTML;\n  var datetime = document.getElementById('DateBox').value;\n  var hoster = document.getElementById('HostName').value;\n  \n  \n  \n  if(addy === '' || datetime === '' || hoster === ''){\n    alert(\"Please enter all the data first\");\n  }else{\n    var data = {\n      service_id: 'gmail',\n      template_id: 'template_P549kwWX',\n      user_id: 'user_mtIxxJUUhp65VCg4m27S0',\n      template_params: {\n        'hoster': hoster,\n        'date': datetime,\n        'addy': addy\n      }\n    };\n  \n    $.ajax('https://api.emailjs.com/api/v1.0/email/send', {\n        type: 'POST',\n        data: JSON.stringify(data),\n        contentType: 'application/json'\n    }).done(function() {\n        alert('Your request will be verified before adding');\n    }).fail(function(error) {\n        alert('Oops... ' + JSON.stringify(error));\n    });\n  }\n}\n\nfunction sendEmail(){\n\n        var inputVal = document.getElementById(\"DiscordName\").value;\n\n        var bikeVal = document.getElementById(\"biketype\").value;\n\n        var latVal = document.getElementById(\"latitude_view\").innerHTML;\n\n        var LongVal = document.getElementById(\"longitude_view\").innerHTML;\n\n        var countryName = document.getElementById('whatCountry').innerHTML\n\n        var cityName = document.getElementById('whatCity').innerHTML;\n        \n        if((latVal === '0' && LongVal === '0') || (latVal === '' && LongVal === '')){\n          alert(\"Please enter a location first\");\n        }else if(inputVal === ''){\n          alert(\"Please enter a username first\");\n        }else{\n          var data = {\n            service_id: 'gmail',\n            template_id: 'bigdicks',\n            user_id: 'user_mtIxxJUUhp65VCg4m27S0',\n            template_params: {\n              'username': inputVal,\n              'bike': bikeVal,\n              'latv': latVal,\n              'longv': LongVal,\n              'country':countryName,\n              'city': cityName\n            }\n          };\n        \n          $.ajax('https://api.emailjs.com/api/v1.0/email/send', {\n              type: 'POST',\n              data: JSON.stringify(data),\n              contentType: 'application/json'\n          }).done(function() {\n              //alert('Tha');\n\n              // adding to the database\n              db.collection(\"riders\").add({\n                name: inputVal,\n                bike: bikeVal,\n                lat: parseFloat(latVal),\n                long: parseFloat(LongVal),\n                country: countryName,\n                city: cityName,\n              });\n\n          }).fail(function(error) {\n              alert('Oops... ' + JSON.stringify(error));\n          });\n        }\n}\n\n\nfunction BottomSearch({panTo, numberv}){\n  const { \n      ready, \n      value, \n      suggestions: {status, data}, \n      setValue, \n      clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions:{\n      \n    },\n  });\n\n  var cnameforit = \"search\";\n\n  return (\n    <div className=\"search2\">\n      <Combobox \n        onSelect={async (address) => {\n          setValue(address, false);\n          clearSuggestions();\n          try{\n            const results = await getGeocode({address});\n            const { lat, lng } = await getLatLng(results[0]);\n            var selectedLocation = results[0];\n\n            var addy2 = \"\";\n              for(let i =0; i < selectedLocation.address_components.length; i++){\n                addy2 = addy2 + \" \" + selectedLocation.address_components[i].long_name;\n              }\n              document.getElementById('addy_view2').innerHTML = addy2;\n\n          }catch(error){\n            console.log(\"ERROR!\");\n            console.log(error);\n          }\n          \n        }}\n        >\n          <ComboboxInput value = {value} \n            onChange={(e) => {\n              setValue(e.target.value);\n            }} \n            disabled = {!ready}\n            placeholder=\"Enter a location\"\n          />\n          <ComboboxPopover className=\"optionscontainer\">\n            <ComboboxList>\n              {status === \"OK\" && data.map(({id, description}) => (\n                <ComboboxOption key={id} value={description} className=\"optionsbro\"/>\n              ))}\n            </ComboboxList>\n          </ComboboxPopover>\n      </Combobox>\n    </div>\n  )\n}\n\nfunction toRadians(n){\n  var pi = Math.PI;\n  return n * (pi/180);\n}\n\nfunction getDist(lat1, lat2, lon1, lon2){\n  var lon1 = toRadians(lon1); \n  var lon2 = toRadians(lon2); \n  var lat1 = toRadians(lat1); \n  var lat2 = toRadians(lat2); \n\n  var dlon = lon2 - lon1;  \n  var dlat = lat2 - lat1; \n  var a = Math.pow(Math.sin(dlat / 2), 2) \n           + Math.cos(lat1) * Math.cos(lat2) \n           * Math.pow(Math.sin(dlon / 2),2); \n        \n  var c = 2 * Math.asin(Math.sqrt(a)); \n\n  var r = 3956;\n\n  return(c*r);\n}\n\nlet PeopleList = [];\n\n\nfunction findPeople(){\n        \n  var radius = document.getElementById(\"Radius\").value;\n  var latVal = document.getElementById(\"latitude_view\").innerHTML;\n  var LongVal = document.getElementById(\"longitude_view\").innerHTML;\n  var resultLabel = document.getElementById(\"results\");\n  \n  var found = \"\";\n\n  if((latVal === '0' && LongVal === '0') || (latVal === '' && LongVal === '')){\n    alert(\"Please select a location first\");\n  }else{\n\n    for(let i = 0; i < checkedArrPart1.length; i ++){\n      var dist = getDist(checkedArrPart1[i].lat, latVal, checkedArrPart1[i].long, LongVal);\n      if(dist <= radius){\n        if(found === \"\"){\n          found = \"@\"+checkedArrPart1[i].name;\n        }else{\n          found = found + \"  @\" + checkedArrPart1[i].name;\n        }\n        \n      }\n    }\n    \n    if(found === \"\"){\n      found = \"No members near you :(\";\n    }\n\n    resultLabel.innerText = found;\n  }\n}\n\n//export default App;","export default [\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#000000\"\r\n            },\r\n            {\r\n                \"lightness\": 13\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#000000\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#144b53\"\r\n            },\r\n            {\r\n                \"lightness\": 14\r\n            },\r\n            {\r\n                \"weight\": 1.4\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#08304b\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#0c4152\"\r\n            },\r\n            {\r\n                \"lightness\": 5\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#000000\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#0b434f\"\r\n            },\r\n            {\r\n                \"lightness\": 25\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#000000\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#0b3d51\"\r\n            },\r\n            {\r\n                \"lightness\": 16\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.local\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#000000\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#146474\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#021019\"\r\n            }\r\n        ]\r\n    }\r\n]","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}